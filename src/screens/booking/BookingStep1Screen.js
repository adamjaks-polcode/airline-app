import {useLayoutEffect, useState} from 'react';import {ScrollView, StyleSheet, View} from 'react-native';import {Text, useTheme} from 'react-native-paper';import Input from '../../components/Input';import Button from '../../components/Button';import {useTranslation} from 'react-i18next';import OptionSelector from '../../components/OptionSelector';import {useAppDispatch} from '../../../store';import {useSelector} from 'react-redux';import {useGetUserSettingsQuery} from '../../../services/userSettingsService';import {setPassengerData, setLuggageType, setUserId} from '../../../slices/flightBookingSlice';import {useGetFlightByIdQuery} from '../../../services/flightsService';import moment from 'moment';const useStyles = () => {  const {colors} = useTheme();  return StyleSheet.create({    header: {      alignItems: 'center',      justifyContent: 'space-between',      flexDirection: 'row',      paddingHorizontal: '10%',      paddingVertical: 32,      backgroundColor: colors.background.dark    },    content: {      paddingHorizontal: '10%',      paddingVertical: 32,    },    formSection: {      gap: 16,      paddingVertical: 24    },    actionButton: {      width: '80%',      marginLeft: '10%',      marginBottom: 32    }  })};const LUGGAGE_OPTIONS = [  {    value: '20kg',    title: '20kg'  },  {    value: '10kg',    title: '10kg'  },  {    value: 'no',    title: 'No additional luggage'  }];const BookingStep1Screen = ({navigation}) => {  const [flightData, setFlightData] = useState(null);  const [luggageSelected, setLuggageSelected] = useState('no');  const [passengerLocalData, setPassengerLocalData] = useState({    firstName: '',    lastName: '',    email: '',    country: '',    defaultDocumentType: '',    idNumber: '',    id: null  });  const {t} = useTranslation();  const styles = useStyles();  const dispatch = useAppDispatch();  const flightId = useSelector(state => state.flightBooking.flightId);  const totalPrice = useSelector(state => state.flightBooking.totalPrice);  const { data: userSettings } = useGetUserSettingsQuery();  const { data: flight, isFlightLoading } = useGetFlightByIdQuery(flightId);  const onChangePassengerDataInputValue = (value, field) => {    setPassengerLocalData(currentPassengerLocalData => ({...currentPassengerLocalData, [field]: value}));  };  const onNextButtonClick = () => {    dispatch(setPassengerData(passengerLocalData));    dispatch(setUserId(1));    dispatch(setLuggageType(luggageSelected));    navigation.navigate('BookingStep2Screen');  };  useLayoutEffect(() => {    if (!isFlightLoading) {      setFlightData(flight);      navigation.setOptions({        title: `${flight?.from} - ${flight?.to}`,      });    }  }, [flightId, isFlightLoading]);  useLayoutEffect(() => {    setPassengerLocalData(userSettings);  }, [userSettings]);  return (    <ScrollView style={styles.wrapper}>      {        flightData && (          <View style={styles.header}>            <Text variant="titleLarge">{moment(flightData.departureDate).format('DD/MM/YYYY')}</Text>            <Text variant="titleLarge">{moment(flightData.departureTime).format('HH:mm')}</Text>          </View>        )      }      <View style={styles.content}>        <Text variant="titleMedium">{t('booking.passengerData')}</Text>        <View style={styles.formSection}>          <Input            placeholder={t('profileScreen.firstName')}            label={t('profileScreen.firstName')}            value={passengerLocalData?.firstName}            onChangeText={value => onChangePassengerDataInputValue(value, 'firstName')}          />          <Input            placeholder={t('profileScreen.lastName')}            label={t('profileScreen.lastName')}            value={passengerLocalData?.lastName}            onChangeText={value => onChangePassengerDataInputValue(value, 'lastName')}          />          <Input            placeholder={t('profileScreen.email')}            label={t('profileScreen.email')}            value={passengerLocalData?.email}            onChangeText={value => onChangePassengerDataInputValue(value, 'email')}          />          <Input            placeholder={t('profileScreen.country')}            label={t('profileScreen.country')}            value={passengerLocalData?.country}            onChangeText={value => onChangePassengerDataInputValue(value, 'country')}          />          <Input            placeholder={t('profileScreen.idNumber')}            label={t('profileScreen.idNumber')}            value={passengerLocalData?.idNumber}            onChangeText={value => onChangePassengerDataInputValue(value, 'idNumber')}          />        </View>        <Text variant="titleMedium">{t('booking.additionalLuggage')}</Text>        <View style={styles.formSection}>          <OptionSelector            options={LUGGAGE_OPTIONS}            selected={luggageSelected}            onSelectChange={setLuggageSelected}          />        </View>      </View>      <Button        style={styles.actionButton}        text={`${t('booking.chooseASeat')} (Current price: ${totalPrice}â‚¬)`}        onPress={onNextButtonClick}      />    </ScrollView>  )};export default BookingStep1Screen;